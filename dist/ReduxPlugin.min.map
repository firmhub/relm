{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6***","webpack:///ReduxPlugin.min.js","webpack:///./~/redux/lib/compose.js","webpack:///./~/redux/lib/createStore.js","webpack:///./~/redux/lib/utils/warning.js","webpack:///./~/redux/lib/index.js","webpack:///./~/redux/lib/applyMiddleware.js","webpack:///./~/redux/lib/bindActionCreators.js","webpack:///./~/redux/lib/combineReducers.js","webpack:///./~/symbol-observable/index.js","webpack:///./~/symbol-observable/ponyfill.js","webpack:///./src/plugins/ReduxPlugin.js"],"names":["root","factory","exports","module","define","amd","this","webpackJsonprelm__name_","118","compose","_len","arguments","length","funcs","Array","_key","arg","_ret","last","rest","slice","v","reduceRight","composed","f","apply","undefined","__esModule","119","__webpack_require__","_interopRequireDefault","obj","default","createStore","reducer","initialState","enhancer","ensureCanMutateNextListeners","nextListeners","currentListeners","getState","currentState","subscribe","listener","Error","isSubscribed","push","index","indexOf","splice","dispatch","action","_isPlainObject2","type","isDispatching","currentReducer","listeners","i","replaceReducer","nextReducer","ActionTypes","INIT","observable","_ref","outerSubscribe","observer","observeState","next","TypeError","unsubscribe","_symbolObservable2","_ref2","_isPlainObject","_symbolObservable","120","warning","message","console","error","e","148","applyMiddleware","bindActionCreators","combineReducers","_createStore","_createStore2","_combineReducers","_combineReducers2","_bindActionCreators","_bindActionCreators2","_applyMiddleware","_applyMiddleware2","_compose","_compose2","_warning","278","middlewares","store","_dispatch","chain","middlewareAPI","map","middleware","_extends","Object","assign","target","source","key","prototype","hasOwnProperty","call","279","bindActionCreator","actionCreator","actionCreators","keys","boundActionCreators","280","getUndefinedStateErrorMessage","actionType","actionName","toString","assertReducerSanity","reducers","forEach","Math","random","substring","split","join","reducerKeys","finalReducers","sanityError","finalReducerKeys","state","hasChanged","nextState","previousStateForKey","nextStateForKey","errorMessage","281","global","window","282","result","Symbol","310","_toConsumableArray","arr","isArray","arr2","from","_classCallCheck","instance","Constructor","__WEBPACK_IMPORTED_MODULE_0_lodash_get__","__WEBPACK_IMPORTED_MODULE_0_lodash_get___default","n","__WEBPACK_IMPORTED_MODULE_1_redux__","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","ReduxPlugin","customizeStore","value","component","_this","init","update","concat","get","path"],"mappings":"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","file":"ReduxPlugin.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReduxPlugin\"] = factory();\n\telse\n\t\troot[\"relm\"] = root[\"relm\"] || {}, root[\"relm\"][\"ReduxPlugin\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReduxPlugin\"] = factory();\n\telse\n\t\troot[\"relm\"] = root[\"relm\"] || {}, root[\"relm\"][\"ReduxPlugin\"] = factory();\n})(this, function() {\nreturn webpackJsonprelm__name_([3],{\n\n/***/ 118:\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = compose;\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  } else {\n    var _ret = function () {\n      var last = funcs[funcs.length - 1];\n      var rest = funcs.slice(0, -1);\n      return {\n        v: function v() {\n          return rest.reduceRight(function (composed, f) {\n            return f(composed);\n          }, last.apply(undefined, arguments));\n        }\n      };\n    }();\n\n    if (typeof _ret === \"object\") return _ret.v;\n  }\n}\n\n/***/ },\n\n/***/ 119:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.ActionTypes = undefined;\nexports[\"default\"] = createStore;\n\nvar _isPlainObject = __webpack_require__(31);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _symbolObservable = __webpack_require__(281);\n\nvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = exports.ActionTypes = {\n  INIT: '@@redux/INIT'\n};\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [initialState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} enhancer The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nfunction createStore(reducer, initialState, enhancer) {\n  var _ref2;\n\n  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = initialState;\n    initialState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, initialState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = initialState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!(0, _isPlainObject2[\"default\"])(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i]();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/zenparsing/es-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[_symbolObservable2[\"default\"]] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[_symbolObservable2[\"default\"]] = observable, _ref2;\n}\n\n/***/ },\n\n/***/ 120:\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = warning;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n/***/ },\n\n/***/ 148:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;\n\nvar _createStore = __webpack_require__(119);\n\nvar _createStore2 = _interopRequireDefault(_createStore);\n\nvar _combineReducers = __webpack_require__(280);\n\nvar _combineReducers2 = _interopRequireDefault(_combineReducers);\n\nvar _bindActionCreators = __webpack_require__(279);\n\nvar _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);\n\nvar _applyMiddleware = __webpack_require__(278);\n\nvar _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);\n\nvar _compose = __webpack_require__(118);\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _warning = __webpack_require__(120);\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (false) {\n  (0, _warning2[\"default\"])('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexports.createStore = _createStore2[\"default\"];\nexports.combineReducers = _combineReducers2[\"default\"];\nexports.bindActionCreators = _bindActionCreators2[\"default\"];\nexports.applyMiddleware = _applyMiddleware2[\"default\"];\nexports.compose = _compose2[\"default\"];\n\n/***/ },\n\n/***/ 278:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports[\"default\"] = applyMiddleware;\n\nvar _compose = __webpack_require__(118);\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, initialState, enhancer) {\n      var store = createStore(reducer, initialState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = _compose2[\"default\"].apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/***/ },\n\n/***/ 279:\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = bindActionCreators;\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n/***/ },\n\n/***/ 280:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = combineReducers;\n\nvar _createStore = __webpack_require__(119);\n\nvar _isPlainObject = __webpack_require__(31);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _warning = __webpack_require__(120);\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!(0, _isPlainObject2[\"default\"])(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key);\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerSanity(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var sanityError;\n  try {\n    assertReducerSanity(finalReducers);\n  } catch (e) {\n    sanityError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var action = arguments[1];\n\n    if (sanityError) {\n      throw sanityError;\n    }\n\n    if (false) {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);\n      if (warningMessage) {\n        (0, _warning2[\"default\"])(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var i = 0; i < finalReducerKeys.length; i++) {\n      var key = finalReducerKeys[i];\n      var reducer = finalReducers[key];\n      var previousStateForKey = state[key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\n/***/ },\n\n/***/ 281:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* global window */\n'use strict';\n\nmodule.exports = __webpack_require__(282)(global || window || this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(132)))\n\n/***/ },\n\n/***/ 282:\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nmodule.exports = function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n/***/ },\n\n/***/ 310:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_get__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_get___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_get__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_redux__ = __webpack_require__(148);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_redux___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_redux__);\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar ReduxPlugin = function () {\n  function ReduxPlugin(_ref) {\n    var customizeStore = _ref.customizeStore;\n\n    _classCallCheck(this, ReduxPlugin);\n\n    this.customizeStore = customizeStore || function createReduxStore(reducer, initialState) {\n      var middlewares = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];\n\n      return __WEBPACK_IMPORTED_MODULE_1_redux__[\"createStore\"](reducer, initialState, __WEBPACK_IMPORTED_MODULE_1_redux__[\"applyMiddleware\"].apply(__WEBPACK_IMPORTED_MODULE_1_redux__, _toConsumableArray(middlewares)));\n    };\n  }\n\n  _createClass(ReduxPlugin, [{\n    key: 'apply',\n    value: function apply(component, source, root) {\n      var _this = this;\n\n      if (component === root) {\n        (function () {\n          var init = component.init;\n          var update = component.update;\n          var middleware = component.middleware;\n\n\n          var store = _this.customizeStore.call(__WEBPACK_IMPORTED_MODULE_1_redux__, update, init(), [].concat(middleware));\n\n          component.dispatch = store.dispatch;\n          component.getState = store.getState;\n          component.subscribe = store.subscribe;\n\n          Object.defineProperty(component, 'state', {\n            get: function get() {\n              return store.getState() || init();\n            }\n          });\n        })();\n      } else {\n        Object.defineProperty(component, 'state', {\n          get: function get() {\n            return __WEBPACK_IMPORTED_MODULE_0_lodash_get___default()(root.getState(), component.path) || component.init();\n          }\n        });\n      }\n    }\n  }]);\n\n  return ReduxPlugin;\n}();\n\n/* harmony default export */ exports[\"default\"] = ReduxPlugin;\n\n/***/ }\n\n},[310])\n});\n;\n\n\n// WEBPACK FOOTER //\n// ReduxPlugin.min.js","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = compose;\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  } else {\n    var _ret = function () {\n      var last = funcs[funcs.length - 1];\n      var rest = funcs.slice(0, -1);\n      return {\n        v: function v() {\n          return rest.reduceRight(function (composed, f) {\n            return f(composed);\n          }, last.apply(undefined, arguments));\n        }\n      };\n    }();\n\n    if (typeof _ret === \"object\") return _ret.v;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/redux/lib/compose.js\n// module id = 118\n// module chunks = 3","'use strict';\n\nexports.__esModule = true;\nexports.ActionTypes = undefined;\nexports[\"default\"] = createStore;\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _symbolObservable = require('symbol-observable');\n\nvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = exports.ActionTypes = {\n  INIT: '@@redux/INIT'\n};\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [initialState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} enhancer The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nfunction createStore(reducer, initialState, enhancer) {\n  var _ref2;\n\n  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = initialState;\n    initialState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, initialState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = initialState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!(0, _isPlainObject2[\"default\"])(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i]();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/zenparsing/es-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[_symbolObservable2[\"default\"]] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[_symbolObservable2[\"default\"]] = observable, _ref2;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/redux/lib/createStore.js\n// module id = 119\n// module chunks = 3","'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = warning;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/redux/lib/utils/warning.js\n// module id = 120\n// module chunks = 3","'use strict';\n\nexports.__esModule = true;\nexports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;\n\nvar _createStore = require('./createStore');\n\nvar _createStore2 = _interopRequireDefault(_createStore);\n\nvar _combineReducers = require('./combineReducers');\n\nvar _combineReducers2 = _interopRequireDefault(_combineReducers);\n\nvar _bindActionCreators = require('./bindActionCreators');\n\nvar _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);\n\nvar _applyMiddleware = require('./applyMiddleware');\n\nvar _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);\n\nvar _compose = require('./compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  (0, _warning2[\"default\"])('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexports.createStore = _createStore2[\"default\"];\nexports.combineReducers = _combineReducers2[\"default\"];\nexports.bindActionCreators = _bindActionCreators2[\"default\"];\nexports.applyMiddleware = _applyMiddleware2[\"default\"];\nexports.compose = _compose2[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/redux/lib/index.js\n// module id = 148\n// module chunks = 3","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports[\"default\"] = applyMiddleware;\n\nvar _compose = require('./compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, initialState, enhancer) {\n      var store = createStore(reducer, initialState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = _compose2[\"default\"].apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/redux/lib/applyMiddleware.js\n// module id = 278\n// module chunks = 3","'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = bindActionCreators;\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/redux/lib/bindActionCreators.js\n// module id = 279\n// module chunks = 3","'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = combineReducers;\n\nvar _createStore = require('./createStore');\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!(0, _isPlainObject2[\"default\"])(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key);\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerSanity(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var sanityError;\n  try {\n    assertReducerSanity(finalReducers);\n  } catch (e) {\n    sanityError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var action = arguments[1];\n\n    if (sanityError) {\n      throw sanityError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);\n      if (warningMessage) {\n        (0, _warning2[\"default\"])(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var i = 0; i < finalReducerKeys.length; i++) {\n      var key = finalReducerKeys[i];\n      var reducer = finalReducers[key];\n      var previousStateForKey = state[key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/redux/lib/combineReducers.js\n// module id = 280\n// module chunks = 3","/* global window */\n'use strict';\n\nmodule.exports = require('./ponyfill')(global || window || this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/index.js\n// module id = 281\n// module chunks = 3","'use strict';\n\nmodule.exports = function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/ponyfill.js\n// module id = 282\n// module chunks = 3","import _ from 'lodash';\nimport * as redux from 'redux';\n\nexport default class ReduxPlugin {\n  constructor ({ customizeStore }) {\n    this.customizeStore = customizeStore || function createReduxStore (reducer, initialState, middlewares = []) {\n      return redux.createStore(reducer, initialState, redux.applyMiddleware(...middlewares));\n    };\n  }\n\n  apply (component, source, root) {\n    if (component === root) {\n      const { init, update, middleware } = component;\n\n      const store = this.customizeStore.call(redux, update, init(), [].concat(middleware));\n\n      component.dispatch = store.dispatch;\n      component.getState = store.getState;\n      component.subscribe = store.subscribe;\n\n      Object.defineProperty(component, 'state', {\n        get: () => store.getState() || init()\n      });\n    } else {\n      Object.defineProperty(component, 'state', {\n        get: () => _.get(root.getState(), component.path) || component.init()\n      });\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugins/ReduxPlugin.js"],"sourceRoot":""}